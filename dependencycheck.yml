# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
# - script: |
#     npm install && \
#     sudo docker run --rm \
#     -e user=$USER \
#     -u $(id -u ${USER}):$(id -g ${USER}) \
#     --volume "$PWD:/src" \
#     --volume "$PWD:/usr/share/dependency-check/data" \
#     --volume "$PWD/odc-reports:/report" \
#     "owasp/dependency-check:latest" \
#     --scan "/src" \
#     --nvdApiKey "$(NVD_API_KEY)" \
#     --format "ALL" \
#     --project "$(Build.Repository.Name)" \
#     --out "/report"
- script: |
    DC_VERSION="latest"
    DC_DIRECTORY=$HOME/OWASP-Dependency-Check
    DC_PROJECT="dependency-check scan: $(pwd)"
    DATA_DIRECTORY="$DC_DIRECTORY/data"
    CACHE_DIRECTORY="$DC_DIRECTORY/data/cache"

    if [ ! -d "$DATA_DIRECTORY" ]; then
        echo "Initially creating persistent directory: $DATA_DIRECTORY"
        mkdir -p "$DATA_DIRECTORY"
    fi
    if [ ! -d "$CACHE_DIRECTORY" ]; then
        echo "Initially creating persistent directory: $CACHE_DIRECTORY"
        mkdir -p "$CACHE_DIRECTORY"
    fi

    docker run --rm \
        -e user=$USER \
        -u $(id -u ${USER}):$(id -g ${USER}) \
        --volume $(pwd):/src:z \
        --volume "$DATA_DIRECTORY":/usr/share/dependency-check/data:z \
        --volume $(pwd)/odc-reports:/report:z \
        owasp/dependency-check:$DC_VERSION \
        --scan /src \
        --nvdApiKey "$(NVD_API_KEY)" \
        --format "ALL" \
        --project "$DC_PROJECT" \
        --out /report
  